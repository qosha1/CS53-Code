Component: ARM Compiler 5.05 update 1 (build 106) Tool: armlink [4d0efa]

==============================================================================

Section Cross References

    main.o(i.getKey) refers to cap_buttons.o(i.Buttons_GetKey) for Buttons_GetKey
    main.o(i.getKey) refers to main.o(.constdata) for keycodes
    main.o(i.main) refers to main.o(i.SystemCoreClockSetHSI) for SystemCoreClockSetHSI
    main.o(i.main) refers to system_stm32f3xx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to main.o(i.NVIC_EnableIRQ) for NVIC_EnableIRQ
    main.o(i.main) refers to display.o(i.display_Init) for display_Init
    main.o(i.main) refers to i2c_control.o(i.mpu_I2C_Init) for mpu_I2C_Init
    main.o(i.main) refers to mpu_control.o(i.mpu_init) for mpu_init
    main.o(i.main) refers to system_stm32f3xx.o(.data) for SystemCoreClock
    cap_buttons.o(i.Button_Initialize) refers to queue.o(i.initQueue) for initQueue
    cap_buttons.o(i.Button_Initialize) refers to queue.o(i.enQueue) for enQueue
    cap_buttons.o(i.Button_Initialize) refers to queue.o(i.queue_isEmpty) for queue_isEmpty
    cap_buttons.o(i.Button_Initialize) refers to cap_buttons.o(i.get_Key) for get_Key
    cap_buttons.o(i.Button_Initialize) refers to cap_buttons.o(.data) for buttonQueue
    cap_buttons.o(i.Buttons_GetKey) refers to cap_buttons.o(.data) for keyStatus
    cap_buttons.o(i.Buttons_KeyAvailable) refers to cap_buttons.o(.data) for buttonAvailable
    cap_buttons.o(i.get_Key) refers to queue.o(i.enQueue) for enQueue
    cap_buttons.o(i.get_Key) refers to queue.o(i.queue_isEmpty) for queue_isEmpty
    cap_buttons.o(i.get_Key) refers to cap_buttons.o(.data) for buttonAvailable
    display.o(i.I2C2_EV_IRQHandler) refers to queue.o(i.deQueue) for deQueue
    display.o(i.I2C2_EV_IRQHandler) refers to display.o(.data) for displayQueue
    display.o(i.display_Init) refers to queue.o(i.initQueue) for initQueue
    display.o(i.display_Init) refers to i2c_control.o(i.Delay) for Delay
    display.o(i.display_Init) refers to queue.o(i.enQueue) for enQueue
    display.o(i.display_Init) refers to display.o(i.display_Communicate) for display_Communicate
    display.o(i.display_Init) refers to queue.o(i.queue_isEmpty) for queue_isEmpty
    display.o(i.display_Init) refers to display.o(.data) for displayQueue
    display.o(i.display_Int) refers to queue.o(i.enQueue) for enQueue
    display.o(i.display_Int) refers to display.o(i.display_Communicate) for display_Communicate
    display.o(i.display_Int) refers to display.o(.constdata) for FONT_BITMAP
    display.o(i.display_Int) refers to display.o(.bss) for display
    display.o(i.display_Int) refers to display.o(.data) for displayQueue
    display.o(i.setup_Draw) refers to queue.o(i.enQueue) for enQueue
    display.o(i.setup_Draw) refers to display.o(i.display_Communicate) for display_Communicate
    display.o(i.setup_Draw) refers to queue.o(i.queue_isEmpty) for queue_isEmpty
    display.o(i.setup_Draw) refers to display.o(.data) for displayQueue
    i2c_control.o(i.Delay) refers to i2c_control.o(.data) for msTicks
    i2c_control.o(i.I2C1_EV_IRQHandler) refers to queue.o(i.deQueue) for deQueue
    i2c_control.o(i.I2C1_EV_IRQHandler) refers to queue.o(i.enQueue) for enQueue
    i2c_control.o(i.I2C1_EV_IRQHandler) refers to i2c_control.o(.data) for mpuTxQueue
    i2c_control.o(i.SysTick_Handler) refers to i2c_control.o(.data) for msTicks
    i2c_control.o(i.mpu_I2C_Init) refers to h1_alloc.o(.text) for malloc
    i2c_control.o(i.mpu_I2C_Init) refers to i2c_control.o(i.I2C_Initialize) for I2C_Initialize
    i2c_control.o(i.mpu_I2C_Init) refers to queue.o(i.initQueue) for initQueue
    i2c_control.o(i.mpu_I2C_Init) refers to h1_free.o(.text) for free
    i2c_control.o(i.mpu_I2C_Init) refers to i2c_control.o(.data) for mpuRxQueue
    i2c_control.o(i.mpu_readRegister) refers to queue.o(i.enQueue) for enQueue
    i2c_control.o(i.mpu_readRegister) refers to i2c_control.o(i.mpu_writeRegister) for mpu_writeRegister
    i2c_control.o(i.mpu_readRegister) refers to i2c_control.o(i.I2C_GenerateSTART) for I2C_GenerateSTART
    i2c_control.o(i.mpu_readRegister) refers to i2c_control.o(.data) for mpuTxQueue
    i2c_control.o(i.mpu_writeRegister) refers to queue.o(i.queue_isEmpty) for queue_isEmpty
    i2c_control.o(i.mpu_writeRegister) refers to i2c_control.o(i.I2C_GenerateSTART) for I2C_GenerateSTART
    i2c_control.o(i.mpu_writeRegister) refers to i2c_control.o(.data) for mpuTxQueue
    queue.o(i.deQueue) refers to queue.o(i.queue_isEmpty) for queue_isEmpty
    queue.o(i.enQueue) refers to queue.o(i.queue_isFull) for queue_isFull
    queue.o(i.initQueue) refers to h1_alloc.o(.text) for malloc
    mpu_control.o(i.EXTI9_5_IRQHandler) refers to i2c_control.o(i.mpu_readRegister) for mpu_readRegister
    mpu_control.o(i.EXTI9_5_IRQHandler) refers to queue.o(i.queue_isEmpty) for queue_isEmpty
    mpu_control.o(i.EXTI9_5_IRQHandler) refers to queue.o(i.deQueue) for deQueue
    mpu_control.o(i.EXTI9_5_IRQHandler) refers to mpu_control.o(.constdata) for reg
    mpu_control.o(i.EXTI9_5_IRQHandler) refers to i2c_control.o(.data) for mpuRxQueue
    mpu_control.o(i.configure_AccelRange) refers to queue.o(i.enQueue) for enQueue
    mpu_control.o(i.configure_AccelRange) refers to i2c_control.o(i.mpu_writeRegister) for mpu_writeRegister
    mpu_control.o(i.configure_AccelRange) refers to mpu_control.o(.data) for mpu_regs
    mpu_control.o(i.configure_AccelRange) refers to mpu_control.o(.constdata) for reg
    mpu_control.o(i.configure_AccelRange) refers to i2c_control.o(.data) for mpuTxQueue
    mpu_control.o(i.configure_Mpu) refers to queue.o(i.enQueue) for enQueue
    mpu_control.o(i.configure_Mpu) refers to i2c_control.o(i.mpu_writeRegister) for mpu_writeRegister
    mpu_control.o(i.configure_Mpu) refers to mpu_control.o(.constdata) for reg
    mpu_control.o(i.configure_Mpu) refers to i2c_control.o(.data) for mpuTxQueue
    mpu_control.o(i.configure_Mpu) refers to mpu_control.o(.data) for mpu_regs
    mpu_control.o(i.display_Register) refers to display.o(i.display_Int) for display_Int
    mpu_control.o(i.mpu_init) refers to h1_alloc.o(.text) for malloc
    mpu_control.o(i.mpu_init) refers to queue.o(i.enQueue) for enQueue
    mpu_control.o(i.mpu_init) refers to i2c_control.o(i.mpu_writeRegister) for mpu_writeRegister
    mpu_control.o(i.mpu_init) refers to i2c_control.o(i.Delay) for Delay
    mpu_control.o(i.mpu_init) refers to mpu_control.o(i.configure_Mpu) for configure_Mpu
    mpu_control.o(i.mpu_init) refers to h1_free.o(.text) for free
    mpu_control.o(i.mpu_init) refers to mpu_control.o(.data) for mpu_regs
    mpu_control.o(i.mpu_init) refers to mpu_control.o(.constdata) for reg
    mpu_control.o(i.mpu_init) refers to i2c_control.o(.data) for mpuTxQueue
    bt_control.o(i.bt_init) refers to queue.o(i.initQueue) for initQueue
    bt_control.o(i.bt_init) refers to i2c_control.o(i.Delay) for Delay
    bt_control.o(i.bt_init) refers to bt_control.o(i.init_Bt_Controller) for init_Bt_Controller
    bt_control.o(i.bt_init) refers to bt_control.o(.data) for btTxQueue
    bt_control.o(i.enqueue_Bt_Command) refers to queue.o(i.enQueue) for enQueue
    bt_control.o(i.enqueue_Bt_Command) refers to queue.o(i.queue_isFull) for queue_isFull
    bt_control.o(i.enqueue_Bt_Command) refers to bt_control.o(.data) for btTxQueue
    bt_control.o(i.init_Bt_Controller) refers to h1_alloc.o(.text) for malloc
    bt_control.o(i.init_Bt_Controller) refers to bt_control.o(i.enqueue_Bt_Command) for enqueue_Bt_Command
    startup_stm32f373xc.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f373xc.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f373xc.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f373xc.o(RESET) refers to startup_stm32f373xc.o(STACK) for __initial_sp
    startup_stm32f373xc.o(RESET) refers to startup_stm32f373xc.o(.text) for Reset_Handler
    startup_stm32f373xc.o(RESET) refers to i2c_control.o(i.SysTick_Handler) for SysTick_Handler
    startup_stm32f373xc.o(RESET) refers to mpu_control.o(i.EXTI9_5_IRQHandler) for EXTI9_5_IRQHandler
    startup_stm32f373xc.o(RESET) refers to i2c_control.o(i.I2C1_EV_IRQHandler) for I2C1_EV_IRQHandler
    startup_stm32f373xc.o(RESET) refers to display.o(i.I2C2_EV_IRQHandler) for I2C2_EV_IRQHandler
    startup_stm32f373xc.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f373xc.o(.text) refers to system_stm32f3xx.o(i.SystemInit) for SystemInit
    startup_stm32f373xc.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f373xc.o(.text) refers to startup_stm32f373xc.o(HEAP) for Heap_Mem
    startup_stm32f373xc.o(.text) refers to startup_stm32f373xc.o(STACK) for Stack_Mem
    system_stm32f3xx.o(i.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.data) for SystemCoreClock
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc_mt.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc_mt.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_free_mt.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.___Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i._free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to h1_free.o(.text) for free
    heap2.o(i._realloc$realtime) refers to h1_alloc.o(.text) for malloc
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._FDIterate) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i.___Heap_Initialize$realtime$concurrent) refers to mutex_dummy.o(.text) for _mutex_initialize
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers to heap2mt.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(i._FDIterate) for _FDIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i._free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_free.o(.text) for free
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_alloc.o(.text) for malloc
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc1.o(.emb_text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init.o(.text) for __Heap_Initialize
    h1_init_mt.o(.text) refers to mutex_dummy.o(.text) for _mutex_initialize
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    maybetermalloc2.o(.emb_text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free.o(.text) for free
    h1_extend_mt.o(.text) refers to h1_free_mt.o(.text) for _free_internal
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f373xc.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final.o(.text) for __Heap_Finalize
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(i.getKey), (64 bytes).
    Removing main.o(.constdata), (541 bytes).
    Removing cap_buttons.o(.rev16_text), (4 bytes).
    Removing cap_buttons.o(.revsh_text), (4 bytes).
    Removing cap_buttons.o(.rrx_text), (6 bytes).
    Removing cap_buttons.o(i.Button_Initialize), (616 bytes).
    Removing cap_buttons.o(i.Buttons_GetKey), (12 bytes).
    Removing cap_buttons.o(i.Buttons_KeyAvailable), (36 bytes).
    Removing cap_buttons.o(i.get_Key), (280 bytes).
    Removing cap_buttons.o(.constdata), (516 bytes).
    Removing cap_buttons.o(.data), (10 bytes).
    Removing display.o(.rev16_text), (4 bytes).
    Removing display.o(.revsh_text), (4 bytes).
    Removing display.o(.rrx_text), (6 bytes).
    Removing display.o(i.display_Int), (164 bytes).
    Removing display.o(i.setup_Draw), (124 bytes).
    Removing display.o(.bss), (1024 bytes).
    Removing display.o(.constdata), (516 bytes).
    Removing i2c_control.o(.rev16_text), (4 bytes).
    Removing i2c_control.o(.revsh_text), (4 bytes).
    Removing i2c_control.o(.rrx_text), (6 bytes).
    Removing mpu_control.o(.rev16_text), (4 bytes).
    Removing mpu_control.o(.revsh_text), (4 bytes).
    Removing mpu_control.o(.rrx_text), (6 bytes).
    Removing mpu_control.o(i.configure_AccelRange), (88 bytes).
    Removing mpu_control.o(i.display_Register), (20 bytes).
    Removing mpu_control.o(i.get_Data_Packet), (2 bytes).
    Removing mpu_control.o(i.init_Accelerometer), (2 bytes).
    Removing mpu_control.o(i.init_Compass), (2 bytes).
    Removing mpu_control.o(i.init_Gyroscope), (2 bytes).
    Removing bt_control.o(.rev16_text), (4 bytes).
    Removing bt_control.o(.revsh_text), (4 bytes).
    Removing bt_control.o(.rrx_text), (6 bytes).
    Removing bt_control.o(i.bt_init), (320 bytes).
    Removing bt_control.o(i.connect_Bluetooth), (2 bytes).
    Removing bt_control.o(i.enqueue_Bt_Command), (56 bytes).
    Removing bt_control.o(i.init_Bt_Controller), (56 bytes).
    Removing bt_control.o(i.start_Bt_Inquiry), (2 bytes).
    Removing bt_control.o(.data), (8 bytes).
    Removing system_stm32f3xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f3xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f3xx.o(.rrx_text), (6 bytes).

45 unused section(s) (total 4561 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001528, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00001500, Max: 0x00020000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x00000188   Data   RO          504    RESET               startup_stm32f373xc.o
    0x08000188   0x00000008   Code   RO          611  * !!!main             c_w.l(__main.o)
    0x08000190   0x00000002   Code   RO          753    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000192   0x00000004   Code   RO          645    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000196   0x00000000   Code   RO          648    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000196   0x00000008   Code   RO          649    .ARM.Collect$$libinit$$00000005  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          651    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          653    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          655    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          658    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          660    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          662    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          664    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          666    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          668    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          670    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          672    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          674    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          676    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          678    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          682    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          684    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          686    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800019e   0x00000000   Code   RO          688    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800019e   0x00000002   Code   RO          689    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x080001a0   0x00000002   Code   RO          810    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080001a2   0x00000000   Code   RO          768    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x080001a2   0x00000000   Code   RO          771    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)
    0x080001a2   0x00000000   Code   RO          774    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)
    0x080001a2   0x00000000   Code   RO          776    .ARM.Collect$$libshutdown$$0000000B  c_w.l(libshutdown2.o)
    0x080001a2   0x00000000   Code   RO          779    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)
    0x080001a2   0x00000002   Code   RO          780    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080001a4   0x00000000   Code   RO          615    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080001a4   0x00000000   Code   RO          696    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080001a4   0x00000006   Code   RO          708    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080001aa   0x00000000   Code   RO          698    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x080001aa   0x00000004   Code   RO          699    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001ae   0x00000000   Code   RO          701    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001ae   0x00000008   Code   RO          702    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001b6   0x00000002   Code   RO          756    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001b8   0x00000000   Code   RO          784    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001b8   0x00000004   Code   RO          785    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001bc   0x00000006   Code   RO          786    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001c2   0x00000002   PAD
    0x080001c4   0x00000000   Code   RO          712    .emb_text           c_w.l(maybetermalloc1.o)
    0x080001c4   0x00000040   Code   RO          505    .text               startup_stm32f373xc.o
    0x08000204   0x0000005e   Code   RO          551    .text               c_w.l(h1_alloc.o)
    0x08000262   0x0000004e   Code   RO          553    .text               c_w.l(h1_free.o)
    0x080002b0   0x00000006   Code   RO          609    .text               c_w.l(heapauxi.o)
    0x080002b6   0x00000002   PAD
    0x080002b8   0x00000008   Code   RO          619    .text               c_w.l(rt_heap_descriptor_intlibspace.o)
    0x080002c0   0x00000004   Code   RO          621    .text               c_w.l(hguard.o)
    0x080002c4   0x0000008a   Code   RO          623    .text               c_w.l(init_alloc.o)
    0x0800034e   0x0000000e   Code   RO          627    .text               c_w.l(h1_init.o)
    0x0800035c   0x00000008   Code   RO          692    .text               c_w.l(libspace.o)
    0x08000364   0x00000034   Code   RO          714    .text               c_w.l(h1_extend.o)
    0x08000398   0x0000000e   Code   RO          718    .text               c_w.l(defsig_rtmem_outer.o)
    0x080003a6   0x00000002   Code   RO          729    .text               c_w.l(use_no_semi.o)
    0x080003a8   0x00000000   Code   RO          731    .text               c_w.l(indicate_semi.o)
    0x080003a8   0x0000004a   Code   RO          732    .text               c_w.l(sys_stackheap_outer.o)
    0x080003f2   0x0000000c   Code   RO          738    .text               c_w.l(exit.o)
    0x080003fe   0x0000000a   Code   RO          740    .text               c_w.l(defsig_exit.o)
    0x08000408   0x00000050   Code   RO          742    .text               c_w.l(defsig_rtmem_inner.o)
    0x08000458   0x0000000c   Code   RO          754    .text               c_w.l(sys_exit.o)
    0x08000464   0x00000032   Code   RO          764    .text               c_w.l(defsig_general.o)
    0x08000496   0x0000000e   Code   RO          781    .text               c_w.l(sys_wrch.o)
    0x080004a4   0x00000018   Code   RO          229    i.Delay             i2c_control.o
    0x080004bc   0x00000080   Code   RO          337    i.EXTI9_5_IRQHandler  mpu_control.o
    0x0800053c   0x0000006c   Code   RO          230    i.I2C1_EV_IRQHandler  i2c_control.o
    0x080005a8   0x00000044   Code   RO          159    i.I2C2_EV_IRQHandler  display.o
    0x080005ec   0x00000016   Code   RO          231    i.I2C_GenerateSTART  i2c_control.o
    0x08000602   0x00000002   PAD
    0x08000604   0x00000088   Code   RO          232    i.I2C_Initialize    i2c_control.o
    0x0800068c   0x00000016   Code   RO            4    i.NVIC_EnableIRQ    main.o
    0x080006a2   0x00000002   PAD
    0x080006a4   0x00000010   Code   RO          233    i.SysTick_Handler   i2c_control.o
    0x080006b4   0x000000a4   Code   RO            5    i.SystemCoreClockSetHSI  main.o
    0x08000758   0x000000a0   Code   RO          512    i.SystemCoreClockUpdate  system_stm32f3xx.o
    0x080007f8   0x0000007c   Code   RO          513    i.SystemInit        system_stm32f3xx.o
    0x08000874   0x000000f8   Code   RO          339    i.configure_Mpu     mpu_control.o
    0x0800096c   0x00000038   Code   RO          298    i.deQueue           queue.o
    0x080009a4   0x00000094   Code   RO          160    i.display_Communicate  display.o
    0x08000a38   0x000003cc   Code   RO          161    i.display_Init      display.o
    0x08000e04   0x00000034   Code   RO          299    i.enQueue           queue.o
    0x08000e38   0x00000026   Code   RO          300    i.initQueue         queue.o
    0x08000e5e   0x00000002   PAD
    0x08000e60   0x00000094   Code   RO            7    i.main              main.o
    0x08000ef4   0x00000140   Code   RO          234    i.mpu_I2C_Init      i2c_control.o
    0x08001034   0x0000012c   Code   RO          345    i.mpu_init          mpu_control.o
    0x08001160   0x0000008c   Code   RO          235    i.mpu_readRegister  i2c_control.o
    0x080011ec   0x00000094   Code   RO          236    i.mpu_writeRegister  i2c_control.o
    0x08001280   0x00000016   Code   RO          301    i.queue_isEmpty     queue.o
    0x08001296   0x00000030   Code   RO          302    i.queue_isFull      queue.o
    0x080012c6   0x0000000a   Code   RO          727    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x080012d0   0x0000022e   Data   RO          346    .constdata          mpu_control.o
    0x080014fe   0x00000002   PAD
    0x08001500   0x00000000   Data   RO          811    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000a88, Max: 0x00006000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000004   Data   RW          166    .data               display.o
    0x20000004   0x0000000c   Data   RW          237    .data               i2c_control.o
    0x20000010   0x00000004   Data   RW          347    .data               mpu_control.o
    0x20000014   0x00000014   Data   RW          514    .data               system_stm32f3xx.o
    0x20000028   0x00000060   Zero   RW          693    .bss                c_w.l(libspace.o)
    0x20000088   0x00000600   Zero   RW          503    HEAP                startup_stm32f373xc.o
    0x20000688   0x00000400   Zero   RW          502    STACK               startup_stm32f373xc.o

